-- =================================================================
--  Schema Definition 
-- =================================================================


-- Enable the pgcrypto extension for gen_random_uuid() function if it doesn't exist.
CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- Stores user account information and roles for access control.
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    phone_number VARCHAR(20),
    role VARCHAR(20) NOT NULL DEFAULT 'user' CHECK (role IN ('user', 'admin')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Stores both user-created trips and pre-defined, bookable tours.
CREATE TABLE travel_plans (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(100) NOT NULL,
    destination VARCHAR(100) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    duration_days INTEGER,
    price BIGINT, 
    price_currency CHAR(3), -- currency code (e.g., 'USD')
    description TEXT,
    cover_image_url VARCHAR(255),
    -- owner_id is NULL for pre-defined tours, and points to a user for their personal trips.
    owner_id UUID REFERENCES users(id) ON DELETE SET NULL,
    plan_type VARCHAR(20) NOT NULL CHECK (plan_type IN ('user', 'tour')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Stores admin-created content about specific attractions.
CREATE TABLE attraction_posts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    location VARCHAR(100),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Stores community blog posts written by users.
CREATE TABLE user_posts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    trip_id UUID REFERENCES travel_plans(id) ON DELETE SET NULL,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    category VARCHAR(50),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Stores photos specifically for attraction posts.
CREATE TABLE attraction_post_photos (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    post_id UUID NOT NULL REFERENCES attraction_posts(id) ON DELETE CASCADE,
    image_url VARCHAR(255) NOT NULL,
    caption VARCHAR(255),
    uploaded_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Stores photos specifically for user-created blog posts.
CREATE TABLE user_post_photos (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    post_id UUID NOT NULL REFERENCES user_posts(id) ON DELETE CASCADE,
    image_url VARCHAR(255) NOT NULL,
    caption VARCHAR(255),
    uploaded_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Stores flight details associated with a pre-defined tour.
CREATE TABLE tour_flights (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    tour_id UUID NOT NULL REFERENCES travel_plans(id) ON DELETE CASCADE,
    airline VARCHAR(100),
    flight_number VARCHAR(50),
    price BIGINT,
    price_currency CHAR(3),
    departure_airport VARCHAR(50),
    arrival_airport VARCHAR(50)
);

-- Stores accommodation details associated with a pre-defined tour.
CREATE TABLE tour_accommodations (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    tour_id UUID NOT NULL REFERENCES travel_plans(id) ON DELETE CASCADE,
    name VARCHAR(100),
    type VARCHAR(50) CHECK (type IN ('hotel', 'hostel', 'guesthouse')),
    rating NUMERIC(2, 1),
    price_per_night BIGINT,
    price_per_night_currency CHAR(3),
    address VARCHAR(255)
);

-- Stores user-submitted reviews for pre-defined tours.
CREATE TABLE tour_reviews (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    tour_id UUID NOT NULL REFERENCES travel_plans(id) ON DELETE CASCADE,
    rating INTEGER CHECK (rating >= 1 AND rating <= 5),
    content TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    -- Ensures a user can only review a tour once.
    UNIQUE(user_id, tour_id)
);

-- Stores user-submitted comments on other users' blog posts.
CREATE TABLE user_post_comments (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    post_id UUID NOT NULL REFERENCES user_posts(id) ON DELETE CASCADE,
    content TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Stores the raw text prompt from a user for an AI-generated trip.
CREATE TABLE ai_requests (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    request_text TEXT NOT NULL,
    travel_plan_id UUID NOT NULL REFERENCES travel_plans(id) ON DELETE CASCADE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Stores the structured itinerary data generated by the AI.
CREATE TABLE trip_itineraries (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    travel_plan_id UUID NOT NULL REFERENCES travel_plans(id) ON DELETE CASCADE,
    itinerary_data JSONB NOT NULL,
    generated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- A polymorphic table to store items a user has favorited.
CREATE TABLE user_favorites (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    -- The ID of the favorited item (from travel_plans, user_posts, or attraction_posts).
    item_id UUID NOT NULL,
    item_type VARCHAR(20) NOT NULL CHECK (item_type IN ('tour', 'post', 'attraction')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UNIQUE(user_id, item_id, item_type)
);
