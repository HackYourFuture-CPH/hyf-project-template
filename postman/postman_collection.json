{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-4a3b-8c7d-9f0e1d2c3b4a",
		"name": "Travel Planner API (Final Complete)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Ping API and Check DB",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health",
								"health"
							]
						},
						"description": "Checks the API and database connectivity. Note: The URL has a double '/health' segment due to the router setup."
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register New User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomSuffix = Math.random().toString(36).substring(2, 10);",
									"pm.collectionVariables.set(\"new_user_username\", `testuser_${randomSuffix}`);",
									"pm.collectionVariables.set(\"new_user_email\", `testuser_${randomSuffix}@example.com`);",
									"pm.collectionVariables.set(\"new_user_password\", \"SecurePass123\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.user && response.user.id) {",
									"        pm.collectionVariables.set(\"userId\", response.user.id);",
									"        console.log(`User ID ${response.user.id} saved successfully!`);",
									"    }",
									"    if (response.token) {",
									"        pm.collectionVariables.set(\"jwt_token\", response.token);",
									"        console.log(\"JWT Token from registration saved successfully!\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{new_user_email}}\",\n    \"username\": \"{{new_user_username}}\",\n    \"password\": \"{{new_user_password}}\",\n    \"password_confirmation\": \"{{new_user_password}}\",\n    \"mobile\": \"{{$randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.collectionVariables.set(\"jwt_token\", response.token);",
									"        console.log(\"User JWT Token saved successfully!\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login_identifier\": \"{{new_user_email}}\",\n    \"password\": \"{{new_user_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.collectionVariables.set(\"jwt_token\", response.token);",
									"        console.log(\"Admin JWT Token saved successfully!\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login_identifier\": \"admin@example.com\",\n    \"password\": \"AdminPass123!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"mobile\": \"+1987654321\",\n    \"profile_image\": \"https://example.com/avatar.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Profile Photo",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile/photo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile",
								"photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"SecurePass123\",\n    \"new_password\": \"NewSecurePass456\",\n    \"new_password_confirmation\": \"NewSecurePass456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/change-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"change-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Favorites",
			"item": [
				{
					"name": "Get My Favorites",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"favorites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a Favorite",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": \"{{tourId}}\",\n    \"item_type\": \"tour\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"favorites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a Favorite",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/favorites/{{tourId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"favorites",
								"{{tourId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Attractions",
			"item": [
				{
					"name": "Get All Attractions (with Filters)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.length > 0) {",
									"        pm.collectionVariables.set(\"attractionId\", response.data[0].id);",
									"        console.log(`Attraction ID ${response.data[0].id} saved successfully!`);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/attractions?search=&location=&category=&sort=created_at-desc&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attractions"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"description": "Searches title, content, and location.",
									"disabled": true
								},
								{
									"key": "location",
									"value": "",
									"description": "Filters by a specific location.",
									"disabled": true
								},
								{
									"key": "category",
									"value": "",
									"description": "Filters by a specific category.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "created_at-desc",
									"description": "Sorts results. Options: `title-asc`, `created_at-desc`, etc.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page number for pagination.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"description": "The number of items per page.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Attraction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/attractions/{{attractionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attractions",
								"{{attractionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Locations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/attractions/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attractions",
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/attractions/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attractions",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attraction Comments",
					"item": [
						{
							"name": "Get All Comments for Attraction",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/attractions/{{attractionId}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"attractions",
										"{{attractionId}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create New Comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"commentId\", response.data.id);",
											"        console.log(`Attraction Comment ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"This attraction is a must-see!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/attractions/{{attractionId}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"attractions",
										"{{attractionId}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Existing Comment",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Updated thoughts on this attraction.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/attractions/{{attractionId}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"attractions",
										"{{attractionId}}",
										"comments",
										"{{commentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Comment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/attractions/{{attractionId}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"attractions",
										"{{attractionId}}",
										"comments",
										"{{commentId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Blogposts",
			"item": [
				{
					"name": "Get All Blogposts (with Filters)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/blogposts?search=&category=&sort=created_at-desc&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"blogposts"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"description": "Searches the title and content of blog posts.",
									"disabled": true
								},
								{
									"key": "category",
									"value": "",
									"description": "Filters by a specific post category.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "created_at-desc",
									"description": "Sorts the results. Options: `created_at-desc`, `title-asc`, etc.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page number for pagination.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"description": "The number of items per page.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Blogposts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/blogposts/my-posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"blogposts",
								"my-posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/blogposts/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"blogposts",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Blogpost",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/blogposts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"blogposts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Blogpost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.id) {",
									"        pm.collectionVariables.set(\"postId\", response.data.id);",
									"        console.log(`Post ID ${response.data.id} saved successfully!`);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My First Blogpost\",\n    \"content\": \"This is the content of my first blogpost.\",\n    \"category\": \"Travel\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/blogposts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"blogposts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Own Blogpost",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My Updated Blogpost Title\",\n    \"content\": \"This is the new, updated content for my blogpost.\",\n    \"category\": \"Technology\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/blogposts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"blogposts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Own Blogpost",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/blogposts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"blogposts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Blogpost Comments",
					"item": [
						{
							"name": "Get All Comments for a Blogpost",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/blogposts/{{postId}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"blogposts",
										"{{postId}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create New Comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"commentId\", response.data.id);",
											"        console.log(`Comment ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"This is a fantastic and insightful article!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/blogposts/{{postId}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"blogposts",
										"{{postId}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Existing Comment",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"This is my updated comment with some new thoughts.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/blogposts/{{postId}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"blogposts",
										"{{postId}}",
										"comments",
										"{{commentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Comment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/blogposts/{{postId}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"blogposts",
										"{{postId}}",
										"comments",
										"{{commentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Manage Photos",
					"item": [
						{
							"name": "Add a Photo to Blogpost",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"photoId\", response.data.id);",
											"        console.log(`Photo ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image_url\": \"https://utfs.io/f/your-uploaded-image-id.jpg\",\n    \"caption\": \"A beautiful view from my trip!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/blogposts/{{postId}}/photos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"blogposts",
										"{{postId}}",
										"photos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Photo from Blogpost",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/blogposts/{{postId}}/photos/{{photoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"blogposts",
										"{{postId}}",
										"photos",
										"{{photoId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Tours",
			"item": [
				{
					"name": "Get All Tours (with Advanced Filters)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tours?search=&sort=price_minor-desc&minPrice=&maxPrice=&minDuration=&maxDuration=&currency=&page=1&limit=9",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tours"
							],
							"query": [
								{
									"key": "search",
									"value": "",
									"description": "Searches tour name, description, and destinations.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "price_minor-desc",
									"description": "Sorts by name, price, duration, or rating.",
									"disabled": true
								},
								{
									"key": "minPrice",
									"value": "",
									"description": "Filters for tours with a price (in minor units) >= value.",
									"disabled": true
								},
								{
									"key": "maxPrice",
									"value": "",
									"description": "Filters for tours with a price (in minor units) <= value.",
									"disabled": true
								},
								{
									"key": "minDuration",
									"value": "",
									"description": "Filters by minimum duration in days.",
									"disabled": true
								},
								{
									"key": "maxDuration",
									"value": "",
									"description": "Filters by maximum duration in days.",
									"disabled": true
								},
								{
									"key": "currency",
									"value": "",
									"description": "Filters by a specific currency code.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page number for pagination.",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "9",
									"description": "The number of items per page.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Tour",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tours/{{tourId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tours",
								"{{tourId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tour Reviews",
					"item": [
						{
							"name": "Get All Reviews for a Tour",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/tours/{{tourId}}/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tours",
										"{{tourId}}",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create New Review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"reviewId\", response.data.id);",
											"        console.log(`Review ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"rating\": 5,\n    \"content\": \"This tour was an amazing experience from start to finish!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/tours/{{tourId}}/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tours",
										"{{tourId}}",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Existing Review",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"rating\": 4,\n    \"content\": \"This is my updated review. It was still a great tour, but one day was a bit rushed.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/tours/{{tourId}}/reviews/{{reviewId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tours",
										"{{tourId}}",
										"reviews",
										"{{reviewId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Review",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/tours/{{tourId}}/reviews/{{reviewId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tours",
										"{{tourId}}",
										"reviews",
										"{{reviewId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Trips",
			"item": [
				{
					"name": "Get My Trips",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trips",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Empty Trip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.id) {",
									"        pm.collectionVariables.set(\"tripId\", response.data.id);",
									"        console.log(`Trip ID ${response.data.id} saved successfully!`);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Summer Vacation\",\n    \"description\": \"A plan for my trip to the coast.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/trips",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips"
							]
						}
					},
					"response": []
				},
				{
					"name": "Build Complete Custom Trip",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Custom European Adventure\",\n    \"description\": \"A 10-day trip through Paris and Rome.\",\n    \"destinations\": [\n        {\n            \"city_name\": \"Paris\",\n            \"country_name\": \"France\",\n            \"stop_order\": 1,\n            \"duration_days\": 5,\n            \"accommodation_ids\": [],\n            \"flight_ids\": []\n        },\n        {\n            \"city_name\": \"Rome\",\n            \"country_name\": \"Italy\",\n            \"stop_order\": 2,\n            \"duration_days\": 5,\n            \"accommodation_ids\": [],\n            \"flight_ids\": []\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/trips/build",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips",
								"build"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Trip",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trips/{{tripId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips",
								"{{tripId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Trip",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Awesome Summer Vacation\",\n    \"description\": \"An updated plan for my amazing trip to the coast.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/trips/{{tripId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips",
								"{{tripId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Trip",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trips/{{tripId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trips",
								"{{tripId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Destinations",
					"item": [
						{
							"name": "Add Destination to Trip",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city_name\": \"Berlin\",\n    \"country_name\": \"Germany\",\n    \"duration_days\": 3,\n    \"stop_order\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/trips/{{tripId}}/destinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"trips",
										"{{tripId}}",
										"destinations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Destination from Trip",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/trips/{{tripId}}/destinations/{{destinationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"trips",
										"{{tripId}}",
										"destinations",
										"{{destinationId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Accommodations",
					"item": [
						{
							"name": "Add Accommodation to Trip",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"destination_id\": \"{{destinationId}}\",\n    \"name\": \"Example Hotel\",\n    \"type\": \"hotel\",\n    \"rating\": 4.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/trips/{{tripId}}/accommodations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"trips",
										"{{tripId}}",
										"accommodations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Accommodation from Trip",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/trips/{{tripId}}/accommodations/{{accommodationId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"trips",
										"{{tripId}}",
										"accommodations",
										"{{accommodationId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Flights",
					"item": [
						{
							"name": "Add Flight to Trip",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"departs_from_destination_id\": \"{{destinationId}}\",\n    \"arrives_at_destination_id\": \"{{anotherDestinationId}}\",\n    \"airline\": \"Gemini Air\",\n    \"flight_number\": \"GA123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/trips/{{tripId}}/flights",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"trips",
										"{{tripId}}",
										"flights"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Flight from Trip",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/trips/{{tripId}}/flights/{{flightId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"trips",
										"{{tripId}}",
										"flights",
										"{{flightId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Trip Planner",
			"item": [
				{
					"name": "Get Trip Options",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip-options?city=Paris&startDate=2026-06-01T00:00:00Z&endDate=2026-06-15T23:59:59Z&numPeople=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip-options"
							],
							"query": [
								{
									"key": "city",
									"value": "Paris"
								},
								{
									"key": "startDate",
									"value": "2026-06-01T00:00:00Z"
								},
								{
									"key": "endDate",
									"value": "2026-06-15T23:59:59Z"
								},
								{
									"key": "numPeople",
									"value": "2"
								}
							]
						},
						"description": "Fetches available flights and accommodations for planning a custom trip."
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Book a Pre-defined Tour",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tour_id\": \"{{tourId}}\",\n    \"num_travelers\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings/tour",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"tour"
							]
						}
					},
					"response": []
				},
				{
					"name": "Book a Custom Trip",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"trip_id\": \"{{tripId}}\",\n    \"num_travelers\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings/custom-trip",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"custom-trip"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get My Bookings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/my-bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"my-bookings"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Get Dashboard Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Get All Users (with Filters)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const response = pm.response.json();",
											"    // Find a user that isn't the admin to target for other requests",
											"    const nonAdminUser = response.data.find(user => user.role !== 'admin');",
											"    if (nonAdminUser) {",
											"        pm.collectionVariables.set(\"adminTargetUserId\", nonAdminUser.id);",
											"        console.log(`Admin target user ID ${nonAdminUser.id} saved successfully!`);",
											"    } else if (response.data && response.data.length > 0) {",
											"        // Fallback to the first user if no non-admin is found",
											"        pm.collectionVariables.set(\"adminTargetUserId\", response.data[0].id);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/users?search=&sort=created_at-desc&page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"users"
									],
									"query": [
										{
											"key": "search",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "created_at-desc",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"moderator\",\n    \"is_active\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/users/{{adminTargetUserId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"users",
										"{{adminTargetUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/users/{{adminTargetUserId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"users",
										"{{adminTargetUserId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tours",
					"item": [
						{
							"name": "Get All Tours (with Filters)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours?search=&sort=created_at-desc&page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours"
									],
									"query": [
										{
											"key": "search",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "created_at-desc",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create New Tour",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"adminCreatedTourId\", response.data.id);",
											"        console.log(`Admin created tour ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Admin: Grand Alpine Expedition\",\n    \"description\": \"A 10-day tour through the mountains, created by an admin.\",\n    \"duration_days\": 10,\n    \"price_minor\": 450000,\n    \"currency_code\": \"EUR\",\n    \"capacity\": 15,\n    \"destinations\": [\n        {\n            \"city_name\": \"Geneva\",\n            \"country_name\": \"Switzerland\",\n            \"duration_days\": 4\n        },\n        {\n            \"city_name\": \"Chamonix\",\n            \"country_name\": \"France\",\n            \"duration_days\": 6\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Single Tour",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours",
										"{{adminCreatedTourId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Existing Tour",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Admin Updated Tour Name\",\n    \"capacity\": 25\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours",
										"{{adminCreatedTourId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Tour",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours",
										"{{adminCreatedTourId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Destinations",
							"item": [
								{
									"name": "Add Destination to Tour",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"    const response = pm.response.json();",
													"    if (response.data && response.data.id) {",
													"        pm.collectionVariables.set(\"destinationId\", response.data.id);",
													"        console.log(`Destination ID ${response.data.id} saved successfully!`);",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"city_name\": \"Paris\",\n    \"country_name\": \"France\",\n    \"duration_days\": 5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/destinations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"destinations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Destination",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"duration_days\": 6\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/destinations/{{destinationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"destinations",
												"{{destinationId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Destination",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/destinations/{{destinationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"destinations",
												"{{destinationId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Accommodations",
							"item": [
								{
									"name": "Add Accommodation to Tour",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"    const response = pm.response.json();",
													"    if (response.data && response.data.id) {",
													"        pm.collectionVariables.set(\"accommodationId\", response.data.id);",
													"        console.log(`Accommodation ID ${response.data.id} saved successfully!`);",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"destination_id\": \"{{destinationId}}\",\n    \"name\": \"Grand Hotel Paris\",\n    \"type\": \"hotel\",\n    \"rating\": 4.5\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/accommodations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"accommodations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Accommodation",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"rating\": 5.0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/accommodations/{{accommodationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"accommodations",
												"{{accommodationId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Accommodation",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/accommodations/{{accommodationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"accommodations",
												"{{accommodationId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Flights",
							"item": [
								{
									"name": "Add Flight to Tour",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"    const response = pm.response.json();",
													"    if (response.data && response.data.id) {",
													"        pm.collectionVariables.set(\"flightId\", response.data.id);",
													"        console.log(`Flight ID ${response.data.id} saved successfully!`);",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"departs_from_destination_id\": \"{{destinationId}}\",\n    \"arrives_at_destination_id\": \"{{anotherDestinationId}}\",\n    \"airline\": \"Gemini Air\",\n    \"flight_number\": \"GA456\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/flights",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"flights"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Flight",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"flight_number\": \"GA789\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/flights/{{flightId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"flights",
												"{{flightId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Flight",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/flights/{{flightId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"tours",
												"{{adminCreatedTourId}}",
												"flights",
												"{{flightId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Posts",
					"item": [
						{
							"name": "Get All Posts (with Filters)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts?search=&sort=created_at-desc&page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts"
									],
									"query": [
										{
											"key": "search",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "created_at-desc",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"adminTargetPostId\", response.data.id);",
											"        console.log(`Admin target post ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Admin Created Post\",\n    \"content\": \"This is a new post created by an admin for testing purposes.\",\n    \"category\": \"Admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Single Post",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts",
										"{{adminTargetPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Post",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Admin Updated Post Title\",\n    \"content\": \"This post has been updated by an administrator.\",\n    \"category\": \"Admin Updates\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts",
										"{{adminTargetPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Post",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts",
										"{{adminTargetPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Manage Photos",
							"item": [
								{
									"name": "Add a Photo to Post (File Upload)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"    const response = pm.response.json();",
													"    if (response.data && response.data.id) {",
													"        pm.collectionVariables.set(\"photoId\", response.data.id);",
													"        console.log(`Post Photo ID ${response.data.id} saved successfully!`);",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "postImage",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}/photos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"posts",
												"{{adminTargetPostId}}",
												"photos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete a Photo from Post",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}/photos/{{photoId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"posts",
												"{{adminTargetPostId}}",
												"photos",
												"{{photoId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Attractions",
					"item": [
						{
							"name": "Get All Attractions (with Filters)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions?search=&sort=created_at-desc&page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions"
									],
									"query": [
										{
											"key": "search",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "created_at-desc",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Attraction",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"adminTargetAttractionId\", response.data.id);",
											"        console.log(`Admin target attraction ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Admin Created Attraction\",\n    \"content\": \"This is a new attraction created by an admin.\",\n    \"location\": \"Admin City\",\n    \"category\": \"Official\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Single Attraction",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions",
										"{{adminTargetAttractionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an Attraction",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Admin Updated Attraction Title\",\n    \"content\": \"This attraction has been updated by an administrator.\",\n    \"location\": \"Admin City\",\n    \"category\": \"Updated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions",
										"{{adminTargetAttractionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Attraction",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions",
										"{{adminTargetAttractionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Manage Photos",
							"item": [
								{
									"name": "Add a Photo to Attraction (URL)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"    const response = pm.response.json();",
													"    if (response.data && response.data.id) {",
													"        pm.collectionVariables.set(\"photoId\", response.data.id);",
													"        console.log(`Attraction Photo ID ${response.data.id} saved successfully!`);",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"image_url\": \"https://placehold.co/600x400/1a1a1a/ffffff?text=Attraction\",\n    \"caption\": \"A placeholder image for the attraction.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}/photos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"attractions",
												"{{adminTargetAttractionId}}",
												"photos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete a Photo from Attraction",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}/photos/{{photoId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"attractions",
												"{{adminTargetAttractionId}}",
												"photos",
												"{{photoId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Bookings",
					"item": [
						{
							"name": "Get All Bookings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/bookings?status=&type=&sort=booked_at-desc&page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"bookings"
									],
									"query": [
										{
											"key": "status",
											"value": "",
											"description": "Filter by 'confirmed', 'pending', or 'cancelled'",
											"disabled": true
										},
										{
											"key": "type",
											"value": "",
											"description": "Filter by 'tour' or 'custom'",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "booked_at-desc",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Booking Status",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"booking_status\": \"cancelled\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/bookings/tour/{{bookingId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"bookings",
										"tour",
										"{{bookingId}}"
									],
									"description": "Update the type in the URL to 'tour' or 'custom'"
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Trips",
					"item": [
						{
							"name": "Get All User Trips",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/trips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"trips"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Single User Trip",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/trips/{{tripId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"trips",
										"{{tripId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User Trip",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/trips/{{tripId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"trips",
										"{{tripId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3001"
		},
		{
			"key": "jwt_token",
			"value": ""
		},
		{
			"key": "tourId",
			"value": "713eb327-468a-48c9-babf-883bb27d4d6e"
		},
		{
			"key": "postId",
			"value": ""
		},
		{
			"key": "tripId",
			"value": ""
		},
		{
			"key": "reviewId",
			"value": ""
		},
		{
			"key": "commentId",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "new_user_email",
			"value": ""
		},
		{
			"key": "new_user_password",
			"value": ""
		},
		{
			"key": "new_user_username",
			"value": ""
		},
		{
			"key": "attractionId",
			"value": ""
		},
		{
			"key": "photoId",
			"value": ""
		},
		{
			"key": "adminTargetUserId",
			"value": ""
		},
		{
			"key": "adminTargetPostId",
			"value": ""
		},
		{
			"key": "adminTargetAttractionId",
			"value": ""
		},
		{
			"key": "adminCreatedTourId",
			"value": ""
		},
		{
			"key": "destinationId",
			"value": ""
		},
		{
			"key": "accommodationId",
			"value": ""
		},
		{
			"key": "flightId",
			"value": ""
		},
		{
			"key": "bookingId",
			"value": ""
		}
	]
}