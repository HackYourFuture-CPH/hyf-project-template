{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-4a3b-8c7d-9f0e1d2c3b4a",
		"name": "Travel Planner API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register New User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomSuffix = Math.random().toString(36).substring(2, 10);",
									"pm.collectionVariables.set(\"new_user_username\", `testuser_${randomSuffix}`);",
									"pm.collectionVariables.set(\"new_user_email\", `testuser_${randomSuffix}@example.com`);",
									"pm.collectionVariables.set(\"new_user_password\", \"SecurePass123\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.user && response.user.id) {",
									"        pm.collectionVariables.set(\"userId\", response.user.id);",
									"        console.log(`User ID ${response.user.id} saved successfully!`);",
									"    }",
									"    if (response.token) {",
									"        pm.collectionVariables.set(\"jwt_token\", response.token);",
									"        console.log(\"JWT Token from registration saved successfully!\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"email\": \"{{new_user_email}}\",\n    \"username\": \"{{new_user_username}}\",\n    \"password\": \"{{new_user_password}}\",\n    \"password_confirmation\": \"{{new_user_password}}\",\n    \"mobile\": \"{{$randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Creates a new user account with dynamic credentials and saves them for the Login request."
					},
					"response": []
				},
				{
					"name": "Login as User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.collectionVariables.set(\"jwt_token\", response.token);",
									"        console.log(\"User JWT Token saved successfully!\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login_identifier\": \"{{new_user_email}}\",\n    \"password\": \"{{new_user_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Logs in as the most recently registered user and saves the JWT."
					},
					"response": []
				},
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.collectionVariables.set(\"jwt_token\", response.token);",
									"        console.log(\"Admin JWT Token saved successfully!\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login_identifier\": \"admin@example.com\",\n    \"password\": \"AdminPass123!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Logs in as the dedicated admin user to get a token for testing admin routes."
					},
					"response": []
				}
			],
			"description": "Endpoints for user registration and login."
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Smith\",\n    \"mobile\": \"+1987654321\",\n    \"profile_image\": \"https://example.com/avatar.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"SecurePass123\",\n    \"new_password\": \"NewSecurePass456\",\n    \"new_password_confirmation\": \"NewSecurePass456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/change-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"change-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Favorites",
			"item": [
				{
					"name": "Add a Favorite",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"item_id\": \"{{tourId}}\",\n    \"item_type\": \"tour\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"favorites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a Favorite",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/favorites/{{tourId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"favorites",
								"{{tourId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Attractions",
			"item": [
				{
					"name": "Get All Attractions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.length > 0) {",
									"        pm.collectionVariables.set(\"attractionId\", response.data[0].id);",
									"        console.log(`Attraction ID ${response.data[0].id} saved successfully!`);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/attractions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attractions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Attraction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/attractions/{{attractionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attractions",
								"{{attractionId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get Single Post",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/posts/{{postId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.id) {",
									"        pm.collectionVariables.set(\"postId\", response.data.id);",
									"        console.log(`Post ID ${response.data.id} saved successfully!`);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My First Post\",\n    \"content\": \"This is the content of my first post.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Comments",
					"item": [
						{
							"name": "Get All Comments for a Post",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/posts/{{postId}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"posts",
										"{{postId}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create New Comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"commentId\", response.data.id);",
											"        console.log(`Comment ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"This is a fantastic and insightful article!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/posts/{{postId}}/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"posts",
										"{{postId}}",
										"comments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Existing Comment",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"This is my updated comment with some new thoughts.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/posts/{{postId}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"posts",
										"{{postId}}",
										"comments",
										"{{commentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Comment",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/posts/{{postId}}/comments/{{commentId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"posts",
										"{{postId}}",
										"comments",
										"{{commentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Manage Photos",
					"item": [
						{
							"name": "Add a Photo to Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"photoId\", response.data.id);",
											"        console.log(`Photo ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "postImage",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/posts/{{postId}}/photos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"posts",
										"{{postId}}",
										"photos"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Photo from Post",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/posts/{{postId}}/photos/{{photoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"posts",
										"{{postId}}",
										"photos",
										"{{photoId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Tours",
			"item": [
				{
					"name": "Get All Tours",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tours?search=europe&sort=price-desc&page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tours"
							],
							"query": [
								{
									"key": "search",
									"value": "europe"
								},
								{
									"key": "sort",
									"value": "price-desc"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Tour",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tours/{{tourId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tours",
								"{{tourId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Tour",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    const tourData = response.data || response.tour;",
									"    if (tourData && tourData.id) {",
									"        pm.collectionVariables.set(\"tourId\", tourData.id);",
									"        console.log(`Tour ID ${tourData.id} saved successfully!`);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Asian Capitals Explorer\",\n    \"description\": \"A whirlwind tour of Asia's most vibrant capital cities.\",\n    \"start_date\": \"2026-07-15\",\n    \"duration_days\": 12,\n    \"price_minor\": 350000,\n    \"currency_code\": \"USD\",\n    \"capacity\": 18,\n    \"cover_image_url\": \"https://placehold.co/600x400/1a1a1a/ffffff?text=Asia+Explorer\",\n    \"destinations\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/tours",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Existing Tour",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Tour Name\",\n    \"price_minor\": 400000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/tours/{{tourId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tours",
								"{{tourId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Tour",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tours/{{tourId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tours",
								"{{tourId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Tour Reviews",
					"item": [
						{
							"name": "Get All Reviews for a Tour",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/tours/{{tourId}}/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tours",
										"{{tourId}}",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create New Review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"reviewId\", response.data.id);",
											"        console.log(`Review ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"rating\": 5,\n    \"content\": \"This tour was an amazing experience from start to finish!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/tours/{{tourId}}/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tours",
										"{{tourId}}",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Existing Review",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"rating\": 4,\n    \"content\": \"This is my updated review. It was still a great tour, but one day was a bit rushed.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/tours/{{tourId}}/reviews/{{reviewId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tours",
										"{{tourId}}",
										"reviews",
										"{{reviewId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Review",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/tours/{{tourId}}/reviews/{{reviewId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"tours",
										"{{tourId}}",
										"reviews",
										"{{reviewId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Get Dashboard Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Get All Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.length > 0) {",
											"        pm.collectionVariables.set(\"adminTargetUserId\", response.data[0].id);",
											"        console.log(`Admin target user ID ${response.data[0].id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User Role or Status",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"moderator\",\n    \"is_active\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/users/{{adminTargetUserId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"users",
										"{{adminTargetUserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove a User's Profile Picture",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/users/{{adminTargetUserId}}/profile-picture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"users",
										"{{adminTargetUserId}}",
										"profile-picture"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a User",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/users/{{adminTargetUserId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"users",
										"{{adminTargetUserId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tours",
					"item": [
						{
							"name": "Get All Tours",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Single Tour",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours",
										"{{adminCreatedTourId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 1: Create a Tour",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"adminCreatedTourId\", response.data.id);",
											"        console.log(`Admin created tour ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Admin Created Tour\",\n    \"description\": \"This is a tour created by an admin.\",\n    \"duration_days\": 10,\n    \"price_minor\": 250000,\n    \"currency_code\": \"EUR\",\n    \"capacity\": 20\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2: Add a Destination",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"destinationId\", response.data.id);",
											"        console.log(`Destination ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"city_name\": \"Paris\",\n    \"country_name\": \"France\",\n    \"duration_days\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/destinations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours",
										"{{adminCreatedTourId}}",
										"destinations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3: Add an Accommodation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"accommodationId\", response.data.id);",
											"        console.log(`Accommodation ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"destination_id\": \"{{destinationId}}\",\n    \"name\": \"Grand Hotel Paris\",\n    \"type\": \"hotel\",\n    \"rating\": 4.5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}/accommodations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours",
										"{{adminCreatedTourId}}",
										"accommodations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4: Update a Tour",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Admin Updated Tour Name\",\n    \"capacity\": 25\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/tours/{{adminCreatedTourId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"tours",
										"{{adminCreatedTourId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Posts",
					"item": [
						{
							"name": "Get All Posts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Single Post",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts",
										"{{adminTargetPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"adminTargetPostId\", response.data.id);",
											"        console.log(`Admin target post ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Admin Created Post\",\n    \"content\": \"This is a new post created by an admin for testing purposes.\",\n    \"category\": \"Admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Post",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Admin Updated Post Title\",\n    \"content\": \"This post has been updated by an administrator.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts",
										"{{adminTargetPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Post",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"posts",
										"{{adminTargetPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Manage Photos",
							"item": [
								{
									"name": "Add a Photo to Post",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"    const response = pm.response.json();",
													"    if (response.data && response.data.id) {",
													"        pm.collectionVariables.set(\"photoId\", response.data.id);",
													"        console.log(`Post Photo ID ${response.data.id} saved successfully!`);",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "postImage",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}/photos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"posts",
												"{{adminTargetPostId}}",
												"photos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete a Photo from Post",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/posts/{{adminTargetPostId}}/photos/{{photoId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"posts",
												"{{adminTargetPostId}}",
												"photos",
												"{{photoId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Attractions",
					"item": [
						{
							"name": "Get All Attractions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Single Attraction",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions",
										"{{adminTargetAttractionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an Attraction",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.id) {",
											"        pm.collectionVariables.set(\"adminTargetAttractionId\", response.data.id);",
											"        console.log(`Admin target attraction ID ${response.data.id} saved successfully!`);",
											"    }",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Admin Created Attraction\",\n    \"content\": \"This is a new attraction created by an admin.\",\n    \"location\": \"Admin City\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update an Attraction",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Admin Updated Attraction Title\",\n    \"content\": \"This attraction has been updated by an administrator.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions",
										"{{adminTargetAttractionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete an Attraction",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"attractions",
										"{{adminTargetAttractionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Manage Photos",
							"item": [
								{
									"name": "Add a Photo to Attraction",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"    const response = pm.response.json();",
													"    if (response.data && response.data.id) {",
													"        pm.collectionVariables.set(\"photoId\", response.data.id);",
													"        console.log(`Attraction Photo ID ${response.data.id} saved successfully!`);",
													"    }",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "attractionImage",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}/photos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"attractions",
												"{{adminTargetAttractionId}}",
												"photos"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete a Photo from Attraction",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/admin/attractions/{{adminTargetAttractionId}}/photos/{{photoId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"attractions",
												"{{adminTargetAttractionId}}",
												"photos",
												"{{photoId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3001"
		},
		{
			"key": "jwt_token",
			"value": ""
		},
		{
			"key": "tourId",
			"value": "713eb327-468a-48c9-babf-883bb27d4d6e"
		},
		{
			"key": "postId",
			"value": "ea28750f-e4b3-46df-8d9c-9fc3f15bec6b"
		},
		{
			"key": "reviewId",
			"value": ""
		},
		{
			"key": "commentId",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "new_user_email",
			"value": ""
		},
		{
			"key": "new_user_password",
			"value": ""
		},
		{
			"key": "new_user_username",
			"value": ""
		},
		{
			"key": "attractionId",
			"value": ""
		},
		{
			"key": "adminTargetUserId",
			"value": ""
		},
		{
			"key": "adminTargetPostId",
			"value": ""
		},
		{
			"key": "adminTargetAttractionId",
			"value": ""
		},
		{
			"key": "adminCreatedTourId",
			"value": ""
		},
		{
			"key": "destinationId",
			"value": ""
		},
		{
			"key": "accommodationId",
			"value": ""
		},
		{
			"key": "flightId",
			"value": ""
		},
		{
			"key": "photoId",
			"value": ""
		}
	]
}

